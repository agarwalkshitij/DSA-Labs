#include<stdio.h>
#include<stdlib.h>
#include<string.h>
#include<math.h>

typedef struct
{
	int str[50];
	int tot;
	int *arr;
}node;

int main()
{
	int p,num=0,i,j,temp[50],flag=0;
	node garr[100],temp1[100];
	char s[1000];
	for(i=0;i<100;i++)
	{
		for(j=0;j<50;j++)
			garr[i].str[j]=0;
		garr[i].tot=0;
		garr[i].arr=(int *)calloc(100,sizeof(int));
	}
	FILE *fp1,*fp;
	fp=fopen("file1.txt","r");
	fp1=fp;
	int ret,cnt=0;
	char c;
	p=0;
	while((ret=fscanf(fp,"%s",s))==1)
	{
		//printf("hello p %s\n",s);
		if(s[0]>='0'&&s[0]<='9'&&s[1]!='.')
		{
			p++;
		}
		else
		{
			for(j=0;j<50;j++)
				temp[j]=0;
			j=0;
			for(i=0;i<strlen(s);i++)
			{
				if(s[i]>='a'&&s[i]<='z')
				{
					temp[j]=s[i]-'a'+1;
					j++;
				}
				else if(s[i]>='A'&&s[i]<='Z')
				{
					temp[j]=s[i]-'A'+1;
					j++;
				}
				else
				{
					break;
				}
			}
			/*for(j=0;j<10;j++)
				printf("%d ",temp[j]);
			printf("\n");*/
			flag=-1;
			for(i=0;i<num;i++)
			{
				if(temp[0]==0)
					break;
				for(j=0;j<=20;j++)
				{
					if(garr[i].str[j]==temp[j])
						flag=0;
					else
					{
						flag=1;
						break;
					}
				}
				if(flag==0)
				{
					if(garr[i].arr[garr[i].tot-1]!=p)
					{
						garr[i].arr[garr[i].tot]=p;
						garr[i].tot++;
					}
					break;
				}
			}
			if(flag==1||(!num))
			{
				for(j=0;j<50;j++)
					garr[num].str[j]=temp[j];
				garr[num].arr[garr[i].tot]=p;
				garr[num].tot++;
				num++;
			}
		}
	}
	//printf("%d \n",num);
	//scanf("%d",&i);
	for(i=0;i<num;i++)
	{
		temp1[i]=garr[i];
	}
	node tt;
	int mini,k;
	for(i=15;i>=0;i--)
	{
		for(j=0;j<num;j++)
		{
			mini=j;
			for(k=j+1;k<num;k++)
			{
				if(temp1[k].str[i]<temp1[mini].str[i])
				{
					mini=k;
				}
			}
			tt=temp1[mini];
			temp1[mini]=temp1[j];
			temp1[j]=tt;
		}
		printf("After interation %d\n",15-i+1);
		for(k=0;k<num;k++)
		{
			j=0;
			while(temp1[k].str[j]!=0)
			{
				printf("%c",temp1[k].str[j]+'a'-1);
				j++;
			}
			printf("\n");	
		}	
	}
	for(i=0;i<num;i++)
	{
		j=0;
		while(temp1[i].str[j]!=0)
		{
			printf("%c",temp1[i].str[j]+'a'-1);
			j++;
		}
		printf(" ");
		for(j=0;j<temp1[i].tot-1;j++)
		{
			printf("%d, ",temp1[i].arr[j]);
		}
		printf("%d\n",temp1[i].arr[j]);
	}
	//printf("%d\n",ret);
	return 0;
}
